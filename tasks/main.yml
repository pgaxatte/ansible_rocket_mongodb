---
- name: Ensure APT cache has been updated recently
  apt:
    update_cache: yes
    cache_valid_time: 3600
  when: ((ansible_pkg_mgr | lower) == "apt")

- name: Deploy /etc/hosts template
  tags: hosts
  template:
    src: hosts.j2
    dest: /etc/hosts
  register: hosts_change_result

- name: Ensure MongoDB Server is installed
  package:
    name: "{{ rocket_chat_mongodb_packages }}"

- name: Deploy MongoDB service configuration
  template:
    src: "{{ rocket_chat_mongodb_config_template }}"
    dest: "{{ rocket_chat_mongodb_config }}"
  notify: Restart the MongoDB service

- meta: flush_handlers

- name: Ensure the MongoDB service is started/enabled
  service:
    name: "{{ rocket_chat_mongodb_service_name }}"
    state: started
    enabled: yes

- name: Wait for MongoDB to come online
  wait_for:
    port: "{{ rocket_chat_mongodb_port }}"
    host: "{{ rocket_chat_mongodb_server_ip }}"
    state: started

- name: Ensure the MongoDB replSets have been initiated
  shell: >-
    mongo --quiet --eval
    'JSON.stringify(rs.initiate({_id:"{{ rocket_chat_mongodb_repl_setname }}",
    members: [{"_id":1, "host":
    "{{ rocket_chat_mongodb_server_ip }}:{{ rocket_chat_mongodb_port }}"}]}))'
  become: yes
  become_user: "{{ rocket_chat_mongodb_service_user }}"
  args:
    executable: /bin/bash
  register: replSet_result
  changed_when:
    - not (replSet_result.stdout is search(' Object'))
    - ('ok' in (replSet_result.stdout | from_json))
    - (((replSet_result.stdout | from_json).ok | int) == 1)

- name: Reset replSet config when /etc/hosts changes
  shell: >-
     mongo --quiet --eval
     'cfg = rs.conf();
     cfg.members[0].host = "{{ ansible_nodename }}";
     rs.reconfig(cfg, {force: true})'
  become: yes
  become_user: "{{ rocket_chat_mongodb_service_user }}"
  when:
    - (hosts_change_result is changed)
    - ((replSet_result is undefined) or (not (replSet_result is changed)))
  args:
    executable: /bin/bash
  notify:
    - Restart the MongoDB service
